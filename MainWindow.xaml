<Window x:Class="QuickRename.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="{Binding Path=Title}" Width="500" Height="360" MinWidth="480" MinHeight="180" Icon="icon.ico"
        Loaded="Window_Loaded" Closed="Window_Closed" DragEnter="Window_DragEnter" Drop="Window_Drop" AllowDrop="True">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50" />
            <RowDefinition Height="*" />
            <RowDefinition Height="50" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="170" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="130" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Button Grid.Column="0" Grid.RowSpan="2" Margin="0,0,85,0" Click="ButtonAddFile_Click" >
                <TextBlock Text="Add file" FontSize="14" TextAlignment="Center"/>
             </Button>

             <Button Grid.Column="0" Grid.RowSpan="2" Margin="85,0,0,0" Click="ButtonWebsite_Click" >
                <TextBlock Text="{Binding Path=WebsiteButton}" FontSize="14" TextAlignment="Center"/>
            </Button>

            <CheckBox Grid.Column="1" Grid.Row="0" Content="Overwrite existing files" IsChecked="{Binding Path=Overwrite, Mode=TwoWay}" Grid.ColumnSpan="2" Margin="10,4,0,0"/>
            <CheckBox Grid.Column="1" Grid.Row="1" Content="Words start with upper case" IsChecked="{Binding Path=StartWithUpperCase, Mode=TwoWay}" Grid.ColumnSpan="2" Margin="10,0,0,0"/>
            <CheckBox Grid.Column="2" Grid.Row="0" Content="Show file extension" IsChecked="{Binding Path=ShowExtension, Mode=TwoWay}" Margin="0,4,0,0"/>
            <CheckBox Grid.Column="2" Grid.Row="1" Content="Show full path" IsChecked="{Binding Path=ShowFullPath, Mode=TwoWay}" Margin="0,0,0,0"/>
        </Grid>

        <DataGrid Grid.Row="1" Name="DataGrid" ItemsSource="{Binding Path=DataGridRows, Mode=TwoWay}" SelectedItem="{Binding Path=SelectedItem, Mode=TwoWay}"
                      AutoGenerateColumns="False" SelectionMode="Single" SelectionUnit="FullRow" HorizontalScrollBarVisibility="Disabled" GridLinesVisibility="None"
                      CanUserAddRows="False" CanUserDeleteRows="True" CanUserResizeRows="False"
                      CanUserReorderColumns="False" CanUserResizeColumns="True" CanUserSortColumns="False" Background="{x:Null}">

            <DataGrid.Columns>
                <DataGridTextColumn Header="Old name" Width="*" Binding="{Binding Path=OldViewPath}" IsReadOnly="True">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="Background" Value="{Binding Path=Brush}" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Foreground" Value="White" />
                                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                    <Setter Property="BorderThickness" Value="2" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>

                <DataGridTextColumn Header="New name" Width="*" Binding="{Binding Path=NewViewPath, Mode=TwoWay}">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="Background" Value="{Binding Path=Brush}" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Foreground" Value="White" />
                                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                    <Setter Property="BorderThickness" Value="2" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>

            <DataGrid.ContextMenu>
                <ContextMenu Name="Menu" StaysOpen="True">
                    <MenuItem Header="Clear" FontWeight="Bold" Click="Clear_Click"/>
                    <MenuItem Header="Clear all" Click="ClearAll_Click"/>
                </ContextMenu>
            </DataGrid.ContextMenu>

        </DataGrid>

        <Button Grid.Row="2" Content="Rename" FontSize="16" FontWeight="SemiBold" Click="ButtonRename_Click" />

    </Grid>
</Window>
